// <auto-generated />
using System;
using GoLogic.BookingPlatform.Infrastructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoLogic.BookingPlatform.Infrastructure.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20220201065359_ReduceDigitsAfterDecimalPointOfPriceProperty")]
    partial class ReduceDigitsAfterDecimalPointOfPriceProperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PostalCode")
                        .HasColumnType("bigint");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Melbourne",
                            Country = "Australia",
                            PostalCode = 3000L,
                            State = "Victoria"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "Morpeth",
                            Country = "Australia",
                            PostalCode = 2321L,
                            State = "New South Wales"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "Smithton",
                            Country = "Australia",
                            PostalCode = 7330L,
                            State = "Tasmania"
                        },
                        new
                        {
                            AddressId = 4,
                            City = "Cannonvale",
                            Country = "Australia",
                            PostalCode = 4802L,
                            State = "Queensland"
                        },
                        new
                        {
                            AddressId = 5,
                            City = "Kurmond",
                            Country = "Australia",
                            PostalCode = 2754L,
                            State = "New South Wales"
                        });
                });

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfGuest")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19,2)");

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Description = "Oaks Melbourne on Lonsdale Suites is surrounded by fabulous shopping, restaurants, cafés, the vibrant theater district and Chinatown. The iconic MCG and Rod Laver Arena are each a 20-minute walk away.",
                            Price = 136.30m,
                            RoomCapacity = 2,
                            Title = "Oaks Melbourne on Lonsdale Suites"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Description = "Hunter Oasis has an outdoor swimming pool, fitness center, a shared lounge and garden in Morpeth. Among the facilities at this property are a 24-hour front desk and a shared kitchen, along with free WiFi throughout the property. The motel features family rooms.",
                            Price = 120m,
                            RoomCapacity = 5,
                            Title = "Hunter Oasis"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Description = "Bridge Hotel has a restaurant, bar, a shared lounge and garden in Smithton. The property has a shared kitchen and room service for guests.",
                            Price = 152.30m,
                            RoomCapacity = 3,
                            Title = "Bridge Hotel"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            Description = "Located in Cannonvale, 6.1 mi from Airlie Beach, this property offers a unique wildlife experience in a tranquil Australian bush setting. Airlie Beach Eco Cabins features accommodations with free WiFi and is 2.6 mi from Whitsunday Plaza.",
                            Price = 146.10m,
                            RoomCapacity = 2,
                            Title = "Airlie Beach Eco Cabins"
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            Description = "Featuring air-conditioned accommodations with a balcony, A place to be is located in Kurmond. The property is 45.1 km from Liverpool and free private parking is featured.",
                            Price = 176.80m,
                            RoomCapacity = 3,
                            Title = "A place to be"
                        });
                });

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.RoomImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageName = "RoomA1.jpg",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageName = "RoomA2.jpg",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageName = "RoomA3.jpg",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 4,
                            ImageName = "RoomB1.jpg",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 5,
                            ImageName = "RoomB2.jpg",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 6,
                            ImageName = "RoomB3.jpg",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 7,
                            ImageName = "RoomC1.jpg",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 8,
                            ImageName = "RoomC2.jpg",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 9,
                            ImageName = "RoomC3.jpg",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 10,
                            ImageName = "RoomD1.jpg",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 11,
                            ImageName = "RoomD2.jpg",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 12,
                            ImageName = "RoomD3.jpg",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 13,
                            ImageName = "RoomE1.jpg",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 14,
                            ImageName = "RoomE2.jpg",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 15,
                            ImageName = "RoomE3.jpg",
                            RoomId = 5
                        });
                });

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "user@gmail.com",
                            Name = "John Thompson",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.Booking", b =>
                {
                    b.HasOne("GoLogic.BookingPlatform.Domain.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoLogic.BookingPlatform.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.Room", b =>
                {
                    b.HasOne("GoLogic.BookingPlatform.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoLogic.BookingPlatform.Domain.Entities.RoomImage", b =>
                {
                    b.HasOne("GoLogic.BookingPlatform.Domain.Entities.Room", "Room")
                        .WithMany("RoomImages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
